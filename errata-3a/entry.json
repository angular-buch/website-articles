{"slug":"errata-3a","html":"<p>In der 3. Auflage unseres Angular-Buchs haben wir alle Kapitel überarbeitet und viele Fehler beseitigt.\nDas war durch wertvolle Hinweise unserer Leserinnen und Leser möglich. Dennoch: Ein gedrucktes Buch ist niemals fehlerfrei, und natürlich hat sich auch in der 3. Auflage der Fehlerteufel eingeschlichen.</p>\n<p><strong>Haben Sie Fragen oder Hinweise, oder haben Sie einen Fehler im Buch gefunden?\nBitte zögern Sie nicht, und schreiben Sie uns eine E-Mail: <a href=\"mailto:&#x74;&#x65;&#97;&#109;&#x40;&#x61;&#x6e;&#x67;&#x75;&#x6c;&#x61;&#x72;&#45;&#x62;&#117;&#99;&#x68;&#46;&#x63;&#111;&#109;\">&#x74;&#x65;&#97;&#109;&#x40;&#x61;&#x6e;&#x67;&#x75;&#x6c;&#x61;&#x72;&#45;&#x62;&#117;&#99;&#x68;&#46;&#x63;&#111;&#109;</a></strong></p>\n<blockquote>\n<p><strong>Dies ist das Errata-Verzeichnis für die 3. Auflage (2020). Wenn Sie die 4. Auflage besitzen, lesen Sie bitte die <a href=\"/blog/errata-4a\">Errata zur 4. Auflage</a>.</strong></p>\n</blockquote>\n<hr>\n<h3 id=\"änderungen-durch-den-strict-mode\">Änderungen durch den Strict Mode</h3>\n<p>Seit Angular 12 ist der Strict Mode beim Anlegen eines neuen Projekts standardmäßig aktiviert.\nDas BookMonkey-Projekt im Buch wurde jedoch ohne Strict Mode entwickelt.\nEs sind deshalb einige Änderungen im Code nötig, um die Anforderungen des Strict Mode zu erfüllen.\nInsbesondere die Meldungen <code>property has no initializer</code> oder <code>is possibly undefined</code> hängen mit dem Strict Mode zusammen.\nWir informieren darüber <a href=\"/blog/2022-06-bm4-update\">in einem separaten Blogpost</a>.\nDen Code auf GitHub haben wir entsprechend aktualisiert und mit Kommentaren versehen.</p>\n<h3 id=\"tslint--eslint\">TSLint / ESLint</h3>\n<p>Im Buch gehen wir auf den Linter <em>TSLint</em> ein, erwähnen aber auch, dass TSLint seit 2019 deprecated ist. Seit Angular 12 wird in neuen Projekten kein Linter mehr eingerichtet.\nWir empfehlen Ihnen, das Tool <em>ESLint</em> zu nutzen. Einige Hinweise dazu haben wir im <a href=\"/blog/2021-06-angular12\">Blogpost zum Update auf Angular 12</a> untergebracht.</p>\n<h3 id=\"9-chrome-devtools-abbildung-falsch-referenziert\">9 Chrome DevTools: Abbildung falsch referenziert</h3>\n<p>Im Abschnitt &quot;Zwischen mehreren Dateien navigieren&quot; auf Seite 185 haben wir im Text die Abbildung falsch referenziert.\nDer Textabschnit bezieht sich auf die nachfolgende Abbildung 9-13, nicht wie gedruckt auf 9-11.</p>\n<blockquote>\n<p>Es öffnet sich ein Suchfeld, in dem nach Dateinamen gesucht werden kann (siehe Abbildung 9-13).</p>\n</blockquote>\n<h3 id=\"1035-oauthoidc-authorization-code-flow\">10.3.5 OAuth/OIDC: Authorization Code Flow</h3>\n<p>In der Abbildung 10-15 auf Seite 264 zum Authorization Code Flow ist Schritt (3) falsch beschriftet.\nIm Request vom Client zum Server wird die <em>Code Challenge</em> übermittelt, nicht der Verifier.\nIm Text ist der Flow korrekt beschrieben.</p>\n<h3 id=\"1228-template-driven-forms-ngmodel-und-formmessagescomponent\">12.2.8 Template-Driven Forms: ngModel und FormMessagesComponent</h3>\n<p>In der Iteration zu Template-Driven Forms entwickeln wir die <code>FormMessagesComponent</code>, um Meldungen im Formular anzuzeigen.\nDie Komponente erhält als Input-Property ein <code>AbstractControl</code>.\nIm Listing 12-17 auf Seite 300 f. für das Template der <code>BookFormComponent</code> zeigen wir, dass die Instanz von <code>ngModel</code> direkt an die Messages-Komponente übergeben werden kann. Das ist nicht korrekt, denn <code>ngModel</code> ist kein <code>AbstractControl</code>! Stattdessen müssen wir das Control aus der Property <code>control</code> lesen:</p>\n<pre><code class=\"language-html\"><span class=\"hljs-comment\">&lt;!-- book-form.component.html --&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;isbn&quot;</span> <span class=\"hljs-attr\">...</span> #<span class=\"hljs-attr\">isbnInput</span>=<span class=\"hljs-string\">&quot;ngModel&quot;</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">bm-form-messages</span>\n  [<span class=\"hljs-attr\">control</span>]=<span class=\"hljs-string\">&quot;isbnInput.control&quot;</span>\n  <span class=\"hljs-attr\">controlName</span>=<span class=\"hljs-string\">&quot;isbn&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">bm-form-messages</span>&gt;</span>\n</code></pre>\n<p>Dieser Fix muss auf alle Stellen im Template der <code>BookFormComponent</code> angewendet werden. Wir haben den <a href=\"https://github.com/book-monkey4/iteration-4-template-driven-forms/blob/master/src/app/book-form/book-form.component.html#L11-L18\">Code im GitHub-Repo</a> entsprechend aktualisiert.</p>\n<h3 id=\"1228-template-driven-forms-controlnameauthor\">12.2.8 Template-Driven Forms: <code>controlName=&quot;author&quot;</code></h3>\n<p>Im Listing 12-27 auf Seite 301 hat sich ein Tippfehler eingeschlichen.\nDer <code>controlName</code> für das Autorenfeld muss <code>authors</code> lauten. Dieser Fehler taucht nur im Buch auf, der Code auf GitHub ist davon nicht betroffen.</p>\n<pre><code class=\"language-html\"><span class=\"hljs-comment\">&lt;!-- book-form.component.html --&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">bm-form-messages</span>\n  [<span class=\"hljs-attr\">control</span>]=<span class=\"hljs-string\">&quot;authorInput.control&quot;</span>\n  <span class=\"hljs-attr\">controlName</span>=<span class=\"hljs-string\">&quot;authors&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">bm-form-messages</span>&gt;</span>\n</code></pre>\n<h3 id=\"12312-reactive-forms-validator-für-published\">12.3.12 Reactive Forms: Validator für <code>published</code></h3>\n<p>Im Formularmodell für Reactive Forms haben wir versehentlich für das Feld <code>published</code> keinen Validator notiert.\nIm Datenmodell <code>Book</code> ist das Property <code>published</code> nicht als optional gesetzt, also sollte das Formular an dieser Stelle auch ein Pflichtfeld anbieten.\nEs sollte der Validator <code>required</code> ergänzt werden.\nAußerdem können wir als Startwert für das <code>FormControl</code> direkt das heutige Datum angeben:</p>\n<pre><code class=\"language-ts\"><span class=\"hljs-keyword\">this</span>.bookForm = <span class=\"hljs-keyword\">this</span>.fb.<span class=\"hljs-keyword\">group</span>({\n  <span class=\"hljs-comment\">// ...</span>\n  published: [<span class=\"hljs-keyword\">new</span> Date(), [Validators.required]]\n});\n</code></pre>\n<h3 id=\"1414-httpclientmodule-in-feature-modulen\">14.1.4 HttpClientModule in Feature-Modulen</h3>\n<p>Im Abschnitt 14.1.4 auf Seite 406 erklären wir, dass ein Feature-Modul alle benötigten weiteren Module importieren muss:</p>\n<blockquote>\n<p>Je nachdem, welche Features außerdem in dem Modul benötigt werden, müssen ebenso weitere Module wie <code>ReactiveFormsModule</code> oder <code>HttpClientModule</code> eingebunden werden.</p>\n</blockquote>\n<p>Für das <code>HttpClientModule</code> ist diese Aussage nicht korrekt! Dieses Modul sollte nur einmalig im Hauptmodul der Anwendung importiert werden, aber nicht in die Feature-Module. Darauf weisen wir im Kasten auf Seite 405 sogar ausdrücklich hin.\nHintergrund ist, dass Providers in lazy geladenen Modulen erneut instanziiert werden können. Dadurch werden unter Umständen die HTTP-Interceptoren von Features-Modulen überschrieben.</p>\n<h3 id=\"1415-spread-operator-und-compodoc\">14.1.5 Spread-Operator und Compodoc</h3>\n<p>Im Kasten auf Seite 409 schlagen wir vor, den Spread-Operator zu verwenden, um die Bestandteile eines Moduls ohne Redundanz zu definieren.\nLeider funktioniert das nicht, wenn Sie das Tool <em>Compodoc</em> verwenden (siehe Abschnitt 28.5 auf Seite 759). In diesem Fall müssen Sie auf den Trick mit dem Spread-Operator verzichten.</p>\n<h3 id=\"1416-dateibaum-mit-book\">14.1.6 Dateibaum mit <code>book</code></h3>\n<p>Ab Seite 409 unterteilen wir den BookMonkey in mehrere Module.\nDie Module <code>BooksModule</code> und <code>AdminModule</code> liegen dabei in eigenen Unterordnern <code>books</code> und <code>admin</code>.\nIm Dateibaum auf Seite 412 haben wir den Ordner allerdings fälschlicherweise <code>book</code> genannt – hier fehlt ein <code>s</code>.</p>\n<h3 id=\"1432-config-für-routercreateurltree\">14.3.2 Config für Router.createUrlTree()</h3>\n<p>Auf Seite 433 enthält das Listing 14-28 einen Fehler:\nUm die Einstellung <code>relativeTo</code> zu setzen, muss das Konfigurationsobjekt im zweiten Argument von <code>createUrlTree()</code> übergeben werden.\nKorrekt lautet der Code also wie folgt:</p>\n<pre><code class=\"language-ts\">this<span class=\"hljs-selector-class\">.router</span><span class=\"hljs-selector-class\">.createUrlTree</span>(<span class=\"hljs-selector-attr\">[<span class=\"hljs-string\">&#x27;../login&#x27;</span>]</span>, { relativeTo: route });\n</code></pre>\n<h3 id=\"272-typo-das-größte-vorteil\">27.2 Typo: <em>Das größte Vorteil</em></h3>\n<p>Auf Seite 741 hat sich ein Tippfehler eingeschlichen. Der korrekte Artikel am Anfang des ersten Satzes lautet natürlich &quot;der&quot;:</p>\n<blockquote>\n<p>Der größte Vorteil dieser Architektur zeigt sich …</p>\n</blockquote>\n<h3 id=\"2811-ng-update---all\">28.11 ng update --all</h3>\n<p>Im Abschnitt <em>28.11 Angular updaten</em> wird in der Konsolenausgabe der Befehl <code>ng update --all</code> genannt.\nDer Parameter <code>--all</code> wurde mit Angular 11.0 entfernt und kann nicht mehr genutzt werden.</p>\n","meta":{"title":"Errata zur 3. Auflage","author":"Angular Buch Team","mail":"team@angular-buch.com","published":"2021-01-25T00:00:00.000Z","lastModified":"2022-06-30T00:00:00.000Z","keywords":["Angular","Errata","Fehlerverzeichnis","3. Auflage"],"language":"de"}}
